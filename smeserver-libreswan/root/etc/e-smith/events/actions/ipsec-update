#!/usr/bin/perl -w
#----------------------------------------------------------------------
# Ipsec actions
# Copyright (C) 2015 John Crisp
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License or more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
#----------------------------------------------------------------------

use strict;
use warnings;
use esmith::ConfigDB;

my $configDB = esmith::ConfigDB->open_ro or die("can't open Config DB");
my $ipsecDB = esmith::ConfigDB->open_ro('ipsec_connections')
  or die("cant connect to ipsec database");

my $dbKey = 'ipsec';

# What CL event calls us ?
my $event = $ARGV[0];

my $function = $event;
$function =~ s/ipsec-//;

die "Unknown function $event\n"
  unless ( $event =~ /stop|restart|password-update/ );

# This should get all the connections in an array

my @connections = $ipsecDB->keys;

foreach my $ipsecprop (@connections)
{
	my $ipsecstatus = $ipsecDB->get_prop( "$ipsecprop", 'status' ) || "disabled";
	if ( $ipsecstatus eq "enabled" )
	{

	   #         my $leftsubnet = $ipsecDB->get_prop("$ipsecprop",'leftsubnet');
	   #         $virtual_private .= "%v4:$leftsubnet,"
	}
}

# Restart all

# Check each connection

# Need to decide

# Check connection status enabled or disabled

# for each connection

# Check running status

# if running and disabled stop
# if running and enabled leave
# if stopped and disabled leave
# if stopped and enabled start

